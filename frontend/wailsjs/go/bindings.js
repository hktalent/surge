// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
window.wailsbindings = {"surge":{"MiddlewareFunctions":{"DownloadFile":{"name":"surge.MiddlewareFunctions.DownloadFile","inputs":[{"type":"string"}],"outputs":[{"type":"bool"}]},"GetFileChunkMap":{"name":"surge.MiddlewareFunctions.GetFileChunkMap","inputs":[{"type":"string"},{"type":"int"}],"outputs":[{"type":"string"}]},"GetFileDetails":{"name":"surge.MiddlewareFunctions.GetFileDetails","inputs":[{"type":"string"}],"outputs":[{"type":"surge.FileDetails"}]},"GetLocalFiles":{"name":"surge.MiddlewareFunctions.GetLocalFiles","inputs":[{"type":"string"},{"type":"surge.FileFilterState"},{"type":"string"},{"type":"bool"},{"type":"int"},{"type":"int"}],"outputs":[{"type":"surge.PagedQueryResult"}]},"GetPublicKey":{"name":"surge.MiddlewareFunctions.GetPublicKey","outputs":[{"type":"string"}]},"GetRemoteFiles":{"name":"surge.MiddlewareFunctions.GetRemoteFiles","inputs":[{"type":"string"},{"type":"string"},{"type":"string"},{"type":"bool"},{"type":"int"},{"type":"int"}],"outputs":[{"type":"surge.PagedQueryResult"}]},"GetTopicSubscriptions":{"name":"surge.MiddlewareFunctions.GetTopicSubscriptions","outputs":[{"type":"[]string"}]},"OpenFile":{"name":"surge.MiddlewareFunctions.OpenFile","inputs":[{"type":"string"}]},"OpenFolder":{"name":"surge.MiddlewareFunctions.OpenFolder","inputs":[{"type":"string"}]},"OpenLink":{"name":"surge.MiddlewareFunctions.OpenLink","inputs":[{"type":"string"}]},"OpenLog":{"name":"surge.MiddlewareFunctions.OpenLog"},"ReadSetting":{"name":"surge.MiddlewareFunctions.ReadSetting","inputs":[{"type":"string"}],"outputs":[{"type":"string"}]},"RemoveFile":{"name":"surge.MiddlewareFunctions.RemoveFile","inputs":[{"type":"string"},{"type":"bool"}],"outputs":[{"type":"bool"}]},"SeedFile":{"name":"surge.MiddlewareFunctions.SeedFile","inputs":[{"type":"string"}],"outputs":[{"type":"bool"}]},"SetDownloadPause":{"name":"surge.MiddlewareFunctions.SetDownloadPause","inputs":[{"type":"string"},{"type":"bool"}]},"StartDownloadMagnetLinks":{"name":"surge.MiddlewareFunctions.StartDownloadMagnetLinks","inputs":[{"type":"string"}],"outputs":[{"type":"bool"}]},"SubscribeToTopic":{"name":"surge.MiddlewareFunctions.SubscribeToTopic","inputs":[{"type":"string"}]},"UnsubscribeFromTopic":{"name":"surge.MiddlewareFunctions.UnsubscribeFromTopic","inputs":[{"type":"string"}]},"WriteSetting":{"name":"surge.MiddlewareFunctions.WriteSetting","inputs":[{"type":"string"},{"type":"string"}],"outputs":[{"type":"bool"}]}}}};
const go = {
  "surge": {
    "MiddlewareFunctions": {
      /**
       * DownloadFile
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<boolean>}  - Go Type: bool
       */
      "DownloadFile": (arg1) => {
        return window.go.surge.MiddlewareFunctions.DownloadFile(arg1);
      },
      /**
       * GetFileChunkMap
       * @param {string} arg1 - Go Type: string
       * @param {number} arg2 - Go Type: int
       * @returns {Promise<string>}  - Go Type: string
       */
      "GetFileChunkMap": (arg1, arg2) => {
        return window.go.surge.MiddlewareFunctions.GetFileChunkMap(arg1, arg2);
      },
      /**
       * GetFileDetails
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<FileDetails>}  - Go Type: surge.FileDetails
       */
      "GetFileDetails": (arg1) => {
        return window.go.surge.MiddlewareFunctions.GetFileDetails(arg1);
      },
      /**
       * GetLocalFiles
       * @param {string} arg1 - Go Type: string
       * @param {FileFilterState} arg2 - Go Type: surge.FileFilterState
       * @param {string} arg3 - Go Type: string
       * @param {boolean} arg4 - Go Type: bool
       * @param {number} arg5 - Go Type: int
       * @param {number} arg6 - Go Type: int
       * @returns {Promise<PagedQueryResult>}  - Go Type: surge.PagedQueryResult
       */
      "GetLocalFiles": (arg1, arg2, arg3, arg4, arg5, arg6) => {
        return window.go.surge.MiddlewareFunctions.GetLocalFiles(arg1, arg2, arg3, arg4, arg5, arg6);
      },
      /**
       * GetPublicKey
       * @returns {Promise<string>}  - Go Type: string
       */
      "GetPublicKey": () => {
        return window.go.surge.MiddlewareFunctions.GetPublicKey();
      },
      /**
       * GetRemoteFiles
       * @param {string} arg1 - Go Type: string
       * @param {string} arg2 - Go Type: string
       * @param {string} arg3 - Go Type: string
       * @param {boolean} arg4 - Go Type: bool
       * @param {number} arg5 - Go Type: int
       * @param {number} arg6 - Go Type: int
       * @returns {Promise<PagedQueryResult>}  - Go Type: surge.PagedQueryResult
       */
      "GetRemoteFiles": (arg1, arg2, arg3, arg4, arg5, arg6) => {
        return window.go.surge.MiddlewareFunctions.GetRemoteFiles(arg1, arg2, arg3, arg4, arg5, arg6);
      },
      /**
       * GetTopicSubscriptions
       * @returns {Promise<Array.<string>>}  - Go Type: []string
       */
      "GetTopicSubscriptions": () => {
        return window.go.surge.MiddlewareFunctions.GetTopicSubscriptions();
      },
      /**
       * OpenFile
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<void>} 
       */
      "OpenFile": (arg1) => {
        return window.go.surge.MiddlewareFunctions.OpenFile(arg1);
      },
      /**
       * OpenFolder
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<void>} 
       */
      "OpenFolder": (arg1) => {
        return window.go.surge.MiddlewareFunctions.OpenFolder(arg1);
      },
      /**
       * OpenLink
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<void>} 
       */
      "OpenLink": (arg1) => {
        return window.go.surge.MiddlewareFunctions.OpenLink(arg1);
      },
      /**
       * OpenLog
       * @returns {Promise<void>} 
       */
      "OpenLog": () => {
        return window.go.surge.MiddlewareFunctions.OpenLog();
      },
      /**
       * ReadSetting
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<string>}  - Go Type: string
       */
      "ReadSetting": (arg1) => {
        return window.go.surge.MiddlewareFunctions.ReadSetting(arg1);
      },
      /**
       * RemoveFile
       * @param {string} arg1 - Go Type: string
       * @param {boolean} arg2 - Go Type: bool
       * @returns {Promise<boolean>}  - Go Type: bool
       */
      "RemoveFile": (arg1, arg2) => {
        return window.go.surge.MiddlewareFunctions.RemoveFile(arg1, arg2);
      },
      /**
       * SeedFile
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<boolean>}  - Go Type: bool
       */
      "SeedFile": (arg1) => {
        return window.go.surge.MiddlewareFunctions.SeedFile(arg1);
      },
      /**
       * SetDownloadPause
       * @param {string} arg1 - Go Type: string
       * @param {boolean} arg2 - Go Type: bool
       * @returns {Promise<void>} 
       */
      "SetDownloadPause": (arg1, arg2) => {
        return window.go.surge.MiddlewareFunctions.SetDownloadPause(arg1, arg2);
      },
      /**
       * StartDownloadMagnetLinks
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<boolean>}  - Go Type: bool
       */
      "StartDownloadMagnetLinks": (arg1) => {
        return window.go.surge.MiddlewareFunctions.StartDownloadMagnetLinks(arg1);
      },
      /**
       * SubscribeToTopic
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<void>} 
       */
      "SubscribeToTopic": (arg1) => {
        return window.go.surge.MiddlewareFunctions.SubscribeToTopic(arg1);
      },
      /**
       * UnsubscribeFromTopic
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<void>} 
       */
      "UnsubscribeFromTopic": (arg1) => {
        return window.go.surge.MiddlewareFunctions.UnsubscribeFromTopic(arg1);
      },
      /**
       * WriteSetting
       * @param {string} arg1 - Go Type: string
       * @param {string} arg2 - Go Type: string
       * @returns {Promise<boolean>}  - Go Type: bool
       */
      "WriteSetting": (arg1, arg2) => {
        return window.go.surge.MiddlewareFunctions.WriteSetting(arg1, arg2);
      },
    },
  },

};
export default go;
